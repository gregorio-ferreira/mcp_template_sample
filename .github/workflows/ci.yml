name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv sync
        uv pip install -e ".[dev]"
    
    - name: Lint with Ruff
      run: uv run ruff check src tests
    
    - name: Format check with Ruff
      run: uv run ruff format --check src tests
    
    - name: Type check with MyPy
      run: uv run mypy src
    
    - name: Run tests with coverage
      run: uv run pytest --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        uv sync
        uv pip install -e ".[dev]"
    
    - name: Start MCP server in background
      run: |
        uv run python scripts/run_server.py &
        echo $! > server.pid
        sleep 3  # Give server time to start
    
    - name: Test server with curl
      run: |
        chmod +x tests/test_examples/test_mcp_server.sh
        ./tests/test_examples/test_mcp_server.sh --check-server
    
    - name: Test with Python client
      run: uv run python tests/test_examples/test_mcp_client.py --basic
    
    - name: Stop server
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi
